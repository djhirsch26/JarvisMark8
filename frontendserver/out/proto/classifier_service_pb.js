"use strict";
// source: proto/classifier_service.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck
var jspb = require('google-protobuf');
var goog = jspb;
var global = (function () {
    if (this) {
        return this;
    }
    if (typeof window !== 'undefined') {
        return window;
    }
    if (typeof global !== 'undefined') {
        return global;
    }
    if (typeof self !== 'undefined') {
        return self;
    }
    return Function('return this')();
}.call(null));
goog.exportSymbol('proto.classificaiton.ClassifyQueryRequest', null, global);
goog.exportSymbol('proto.classificaiton.ClassifyQueryResponse', null, global);
goog.exportSymbol('proto.classificaiton.Intent', null, global);
goog.exportSymbol('proto.classificaiton.Intent.Audio', null, global);
goog.exportSymbol('proto.classificaiton.Intent.IntentCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.classificaiton.ClassifyQueryRequest = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.classificaiton.ClassifyQueryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.classificaiton.ClassifyQueryRequest.displayName = 'proto.classificaiton.ClassifyQueryRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.classificaiton.ClassifyQueryResponse = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.classificaiton.ClassifyQueryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.classificaiton.ClassifyQueryResponse.displayName = 'proto.classificaiton.ClassifyQueryResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.classificaiton.Intent = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, proto.classificaiton.Intent.oneofGroups_);
};
goog.inherits(proto.classificaiton.Intent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.classificaiton.Intent.displayName = 'proto.classificaiton.Intent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.classificaiton.Intent.Audio = function (opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.classificaiton.Intent.Audio, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    /**
     * @public
     * @override
     */
    proto.classificaiton.Intent.Audio.displayName = 'proto.classificaiton.Intent.Audio';
}
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.classificaiton.ClassifyQueryRequest.prototype.toObject = function (opt_includeInstance) {
        return proto.classificaiton.ClassifyQueryRequest.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.classificaiton.ClassifyQueryRequest} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.classificaiton.ClassifyQueryRequest.toObject = function (includeInstance, msg) {
        var f, obj = {
            query: jspb.Message.getFieldWithDefault(msg, 1, "")
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.classificaiton.ClassifyQueryRequest}
 */
proto.classificaiton.ClassifyQueryRequest.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.classificaiton.ClassifyQueryRequest;
    return proto.classificaiton.ClassifyQueryRequest.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.classificaiton.ClassifyQueryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.classificaiton.ClassifyQueryRequest}
 */
proto.classificaiton.ClassifyQueryRequest.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setQuery(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.classificaiton.ClassifyQueryRequest.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.classificaiton.ClassifyQueryRequest.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.classificaiton.ClassifyQueryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.classificaiton.ClassifyQueryRequest.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = /** @type {string} */ (jspb.Message.getField(message, 1));
    if (f != null) {
        writer.writeString(1, f);
    }
};
/**
 * optional string query = 1;
 * @return {string}
 */
proto.classificaiton.ClassifyQueryRequest.prototype.getQuery = function () {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};
/**
 * @param {string} value
 * @return {!proto.classificaiton.ClassifyQueryRequest} returns this
 */
proto.classificaiton.ClassifyQueryRequest.prototype.setQuery = function (value) {
    return jspb.Message.setField(this, 1, value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.classificaiton.ClassifyQueryRequest} returns this
 */
proto.classificaiton.ClassifyQueryRequest.prototype.clearQuery = function () {
    return jspb.Message.setField(this, 1, undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.classificaiton.ClassifyQueryRequest.prototype.hasQuery = function () {
    return jspb.Message.getField(this, 1) != null;
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.classificaiton.ClassifyQueryResponse.prototype.toObject = function (opt_includeInstance) {
        return proto.classificaiton.ClassifyQueryResponse.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.classificaiton.ClassifyQueryResponse} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.classificaiton.ClassifyQueryResponse.toObject = function (includeInstance, msg) {
        var f, obj = {
            intent: (f = msg.getIntent()) && proto.classificaiton.Intent.toObject(includeInstance, f)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.classificaiton.ClassifyQueryResponse}
 */
proto.classificaiton.ClassifyQueryResponse.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.classificaiton.ClassifyQueryResponse;
    return proto.classificaiton.ClassifyQueryResponse.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.classificaiton.ClassifyQueryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.classificaiton.ClassifyQueryResponse}
 */
proto.classificaiton.ClassifyQueryResponse.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.classificaiton.Intent;
                reader.readMessage(value, proto.classificaiton.Intent.deserializeBinaryFromReader);
                msg.setIntent(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.classificaiton.ClassifyQueryResponse.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.classificaiton.ClassifyQueryResponse.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.classificaiton.ClassifyQueryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.classificaiton.ClassifyQueryResponse.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getIntent();
    if (f != null) {
        writer.writeMessage(1, f, proto.classificaiton.Intent.serializeBinaryToWriter);
    }
};
/**
 * optional Intent intent = 1;
 * @return {?proto.classificaiton.Intent}
 */
proto.classificaiton.ClassifyQueryResponse.prototype.getIntent = function () {
    return /** @type{?proto.classificaiton.Intent} */ (jspb.Message.getWrapperField(this, proto.classificaiton.Intent, 1));
};
/**
 * @param {?proto.classificaiton.Intent|undefined} value
 * @return {!proto.classificaiton.ClassifyQueryResponse} returns this
*/
proto.classificaiton.ClassifyQueryResponse.prototype.setIntent = function (value) {
    return jspb.Message.setWrapperField(this, 1, value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.classificaiton.ClassifyQueryResponse} returns this
 */
proto.classificaiton.ClassifyQueryResponse.prototype.clearIntent = function () {
    return this.setIntent(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.classificaiton.ClassifyQueryResponse.prototype.hasIntent = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.classificaiton.Intent.oneofGroups_ = [[1, 2]];
/**
 * @enum {number}
 */
proto.classificaiton.Intent.IntentCase = {
    INTENT_NOT_SET: 0,
    AUDIO: 1,
    UNKNOWN: 2
};
/**
 * @return {proto.classificaiton.Intent.IntentCase}
 */
proto.classificaiton.Intent.prototype.getIntentCase = function () {
    return /** @type {proto.classificaiton.Intent.IntentCase} */ (jspb.Message.computeOneofCase(this, proto.classificaiton.Intent.oneofGroups_[0]));
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.classificaiton.Intent.prototype.toObject = function (opt_includeInstance) {
        return proto.classificaiton.Intent.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.classificaiton.Intent} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.classificaiton.Intent.toObject = function (includeInstance, msg) {
        var f, obj = {
            audio: (f = msg.getAudio()) && proto.classificaiton.Intent.Audio.toObject(includeInstance, f),
            unknown: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
        };
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.classificaiton.Intent}
 */
proto.classificaiton.Intent.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.classificaiton.Intent;
    return proto.classificaiton.Intent.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.classificaiton.Intent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.classificaiton.Intent}
 */
proto.classificaiton.Intent.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = new proto.classificaiton.Intent.Audio;
                reader.readMessage(value, proto.classificaiton.Intent.Audio.deserializeBinaryFromReader);
                msg.setAudio(value);
                break;
            case 2:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setUnknown(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.classificaiton.Intent.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.classificaiton.Intent.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.classificaiton.Intent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.classificaiton.Intent.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
    f = message.getAudio();
    if (f != null) {
        writer.writeMessage(1, f, proto.classificaiton.Intent.Audio.serializeBinaryToWriter);
    }
    f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
    if (f != null) {
        writer.writeBool(2, f);
    }
};
if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * Optional fields that are not set will be set to undefined.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
     * @param {boolean=} opt_includeInstance Deprecated. whether to include the
     *     JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.classificaiton.Intent.Audio.prototype.toObject = function (opt_includeInstance) {
        return proto.classificaiton.Intent.Audio.toObject(opt_includeInstance, this);
    };
    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Deprecated. Whether to include
     *     the JSPB instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.classificaiton.Intent.Audio} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.classificaiton.Intent.Audio.toObject = function (includeInstance, msg) {
        var f, obj = {};
        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}
/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.classificaiton.Intent.Audio}
 */
proto.classificaiton.Intent.Audio.deserializeBinary = function (bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.classificaiton.Intent.Audio;
    return proto.classificaiton.Intent.Audio.deserializeBinaryFromReader(msg, reader);
};
/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.classificaiton.Intent.Audio} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.classificaiton.Intent.Audio}
 */
proto.classificaiton.Intent.Audio.deserializeBinaryFromReader = function (msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};
/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.classificaiton.Intent.Audio.prototype.serializeBinary = function () {
    var writer = new jspb.BinaryWriter();
    proto.classificaiton.Intent.Audio.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};
/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.classificaiton.Intent.Audio} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.classificaiton.Intent.Audio.serializeBinaryToWriter = function (message, writer) {
    var f = undefined;
};
/**
 * optional Audio audio = 1;
 * @return {?proto.classificaiton.Intent.Audio}
 */
proto.classificaiton.Intent.prototype.getAudio = function () {
    return /** @type{?proto.classificaiton.Intent.Audio} */ (jspb.Message.getWrapperField(this, proto.classificaiton.Intent.Audio, 1));
};
/**
 * @param {?proto.classificaiton.Intent.Audio|undefined} value
 * @return {!proto.classificaiton.Intent} returns this
*/
proto.classificaiton.Intent.prototype.setAudio = function (value) {
    return jspb.Message.setOneofWrapperField(this, 1, proto.classificaiton.Intent.oneofGroups_[0], value);
};
/**
 * Clears the message field making it undefined.
 * @return {!proto.classificaiton.Intent} returns this
 */
proto.classificaiton.Intent.prototype.clearAudio = function () {
    return this.setAudio(undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.classificaiton.Intent.prototype.hasAudio = function () {
    return jspb.Message.getField(this, 1) != null;
};
/**
 * optional bool unknown = 2;
 * @return {boolean}
 */
proto.classificaiton.Intent.prototype.getUnknown = function () {
    return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};
/**
 * @param {boolean} value
 * @return {!proto.classificaiton.Intent} returns this
 */
proto.classificaiton.Intent.prototype.setUnknown = function (value) {
    return jspb.Message.setOneofField(this, 2, proto.classificaiton.Intent.oneofGroups_[0], value);
};
/**
 * Clears the field making it undefined.
 * @return {!proto.classificaiton.Intent} returns this
 */
proto.classificaiton.Intent.prototype.clearUnknown = function () {
    return jspb.Message.setOneofField(this, 2, proto.classificaiton.Intent.oneofGroups_[0], undefined);
};
/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.classificaiton.Intent.prototype.hasUnknown = function () {
    return jspb.Message.getField(this, 2) != null;
};
goog.object.extend(exports, proto.classificaiton);
